//
// Copyright (c) 2017, 2018, 2019, 2024 Couchbase, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Please try to keep this build file as similar to the other family build files
// as is possible.
//


// ----------------------------------------------------------------
// Plugins
// ----------------------------------------------------------------

plugins {
    id 'java-library'
    id 'kotlin'
}


// ----------------------------------------------------------------
// Constants
// ----------------------------------------------------------------

ext {
    CBL_GROUP = 'com.couchbase.lite'

    BUILD_RELEASE = file("${ROOT_DIR}/version.txt").text.trim()
    BUILD_NUMBER = (project.hasProperty("buildNumber") && buildNumber) ? buildNumber : "SNAPSHOT"

    // if validating a release, we'll use the released bits
    BUILD_VERSION = "${BUILD_RELEASE}"
    // normally, though, we will use a local build
    if (BUILD_NUMBER != "RELEASE") { BUILD_VERSION = "${BUILD_VERSION}-${BUILD_NUMBER}" }

    CBL_COMMON_ROOT_DIR = "${ROOT_DIR}/common"
    CBL_COMMON_DIR= "${CBL_COMMON_ROOT_DIR}/common"
    CBL_COMMON_JAVA_DIR = "${CBL_COMMON_ROOT_DIR}/java"
    CBL_CE_ROOT_DIR = "${ROOT_DIR}/ce"
    CBL_CE_COMMON_DIR = "${CBL_CE_ROOT_DIR}/common"
    CBL_CE_JAVA_DIR = "${CBL_CE_ROOT_DIR}/java"

    REPORTS_DIR = "${buildDir}/reports"

    CBL_NATIVE_DIR = "${buildDir}/native"

    CBL_JAVA_LIB = 'couchbase-lite-java'
}

// This module is for testing on Jenkins.  Require a build number
if (BUILD_NUMBER == "SNAPSHOT") { throw new InvalidUserDataException ("!!! A build number is required") }

// comma separated list of annotations for tests that should not be run.
// e.g., -PtestFilter='com.couchbase.lite.internal.utils.SlowTest,com.couchbase.lite.internal.utils.VerySlowTest'
def TEST_FILTER = (!project.hasProperty("testFilter")) ? null : testFilter.replaceAll("\\s", "")

// Set -Pverbose to get full console logs for tests
def VERBOSE = project.hasProperty("verbose")

print "Testing ${BUILD_VERSION}"


// ----------------------------------------------------------------
// Build
// ----------------------------------------------------------------

group = CBL_GROUP
version = BUILD_VERSION

compileJava.options.encoding = "UTF-8"
java {
    targetCompatibility JavaVersion.VERSION_1_8
    sourceCompatibility JavaVersion.VERSION_1_8

    sourceSets {
        main {
            resources.srcDirs = [
                "${CBL_COMMON_JAVA_DIR}/main/resources",         // Resource files
                "${CBL_NATIVE_DIR}",                             // Native Libraries
            ]
        }
        test {
            java.srcDirs = [
                "${CBL_COMMON_DIR}/test/java",                   // Common tests
                "${CBL_COMMON_JAVA_DIR}/test/java",              // Common Java tests
                "${CBL_CE_COMMON_DIR}/test/java",                // CE Common tests
                "${CBL_CE_JAVA_DIR}lib/src/test/java",           // CE Common tests
            ]
            resources.srcDirs = [
                "${CBL_COMMON_DIR}/test/assets",                 // Common test assets
            ]
        }
    }
}

repositories {
    maven {
        if (BUILD_NUMBER == "RELEASE") {
            // Validate a release
            url "https://mobile.maven.couchbase.com/maven2/dev/"
        }
        else {
            // Test a release candidate
            url "https://proget.sc.couchbase.com/maven2/cimaven"
        }
        content { includeGroupByRegex "com\\.couchbase\\.lite.*" }
    }

    google()
    mavenCentral()
}

dependencies {
    testCompileOnly 'androidx.annotation:annotation:1.3.0'

    testImplementation "com.couchbase.lite:${CBL_JAVA_LIB}:${BUILD_VERSION}"

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:${KOTLIN_VERSION}"
    testImplementation 'junit:junit:4.13.2'
}


// ----------------------------------------------------------------
// Testing
// ----------------------------------------------------------------

compileTestJava.options.encoding = "UTF-8"

compileKotlin.kotlinOptions.jvmTarget = "1.8"
compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

kotlin { kotlinDaemonJvmArgs = ["-Xmx3072m", "-Xms512m"] }

test {
    workingDir = new File(workingDir, ".test-" + new Date().format('yyMMddHHmm'))
    if (!workingDir.exists()) { workingDir.mkdirs() }

    if (TEST_FILTER != null) { exclude TEST_FILTER }

    testLogging {
        outputs.upToDateWhen { false }

        events = ["failed", "skipped"]

        showStandardStreams = VERBOSE

        showCauses = true
        showExceptions = true
        showStackTraces = true
        exceptionFormat = 'full'
    }
}


// ----------------------------------------------------------------
// Tasks
// ----------------------------------------------------------------

// This target requires setting the property "automatedTests" true.
// See settings.gradle for explanation.
task ciTest(dependsOn: ['test'])

