//
// build.gradle
//
// Copyright (c) 2017, 2018, 2019 Couchbase, Inc. All rights reserved.
//
// Licensed under the Couchbase License Agreement (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
//     https://info.couchbase.com/rs/302-GJY-034/images/2017-10-30_License_Agreement.pdf
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Please try to keep this build file as similar to the other family build files
// as is possible.
//


// ----------------------------------------------------------------
// Plugins
// ----------------------------------------------------------------

plugins {
    id 'java-library'
    id 'kotlin'
}


// ----------------------------------------------------------------
// Constants
// ----------------------------------------------------------------

ext {
    CBL_GROUP = 'com.couchbase.lite'

    BUILD_RELEASE = file("${ROOT_DIR}/version.txt").text.trim()
    BUILD_NUMBER = (project.hasProperty("buildNumber") && buildNumber) ? buildNumber : "SNAPSHOT"
    BUILD_VERSION = "${BUILD_RELEASE}-${BUILD_NUMBER}"

    CBL_COMMON_ROOT_DIR = "${ROOT_DIR}/common"
    CBL_COMMON_DIR= "${CBL_COMMON_ROOT_DIR}/common"
    CBL_COMMON_JAVA_DIR = "${CBL_COMMON_ROOT_DIR}/java"
    CBL_CE_ROOT_DIR = "${ROOT_DIR}/ce"
    CBL_CE_COMMON_DIR = "${CBL_CE_ROOT_DIR}/common"
    CBL_CE_JAVA_DIR = "${CBL_CE_ROOT_DIR}/java"

    REPORTS_DIR = "${buildDir}/reports"
    ETC_DIR = "${CBL_COMMON_ROOT_DIR}/etc"

    CBL_NATIVE_DIR = "${buildDir}/native"

    CBL_JAVA_LIB = 'couchbase-lite-java'
    if (BUILD_NUMBER == "SNAPSHOT") { CBL_JAVA_LIB = "${CBL_JAVA_LIB}-macos" }
}

// comma separated list of annotations for tests that should not be run.
def TEST_FILTER = (!project.hasProperty("testFilter")) ? null : testFilter

// Set -Pverbose to get full console logs for tests
def VERBOSE = project.hasProperty("verbose")


// ----------------------------------------------------------------
// Build
// ----------------------------------------------------------------

group = CBL_GROUP
version = BUILD_VERSION

compileJava.options.encoding = "UTF-8"
java {
    targetCompatibility JavaVersion.VERSION_1_8
    sourceCompatibility JavaVersion.VERSION_1_8

    sourceSets {
        main {
            resources.srcDirs = [
                "${CBL_COMMON_JAVA_DIR}/main/resources",         // Resource files
                "${CBL_NATIVE_DIR}",                             // Native Libraries
            ]
        }
        test {
            java.srcDirs = [
                "${CBL_COMMON_DIR}/test/java",                   // Common tests
                "${CBL_COMMON_JAVA_DIR}/test/java",              // Common Java tests
                "${CBL_CE_COMMON_DIR}/test/java",                // CE Common tests
                "${CBL_CE_JAVA_DIR}lib/src/test/java",           // CE Common tests
            ]
            resources.srcDirs = [
                "${CBL_COMMON_DIR}/test/assets",                 // Common test assets
            ]
        }
    }
}

repositories {
    if (BUILD_NUMBER == "SNAPSHOT") { mavenLocal() }
    maven {
        url "http://proget.build.couchbase.com/maven2/cimaven"
        allowInsecureProtocol = true
    }
    google()
    mavenCentral()
}

dependencies {
    testCompileOnly 'androidx.annotation:annotation:1.4.0'

    testImplementation "com.couchbase.lite:${CBL_JAVA_LIB}:${BUILD_VERSION}"

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${KOTLIN_VERSION}"
    testImplementation 'junit:junit:4.13.2'
}


// ----------------------------------------------------------------
// Testing
// ----------------------------------------------------------------

compileTestJava.options.encoding = "UTF-8"

compileKotlin.kotlinOptions.jvmTarget = "1.8"
compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

kotlin { kotlinDaemonJvmArgs = ["-Xmx3072m", "-Xms512m"] }

test {
    workingDir = new File(workingDir, ".test-" + new Date().format('yyMMddHHmm'))
    if (!workingDir.exists()) { workingDir.mkdirs() }

    if (TEST_FILTER != null) { exclude "${TEST_FILTER}" }

    testLogging {
        outputs.upToDateWhen { false }

        events = ["failed", "skipped"]

        showStandardStreams = VERBOSE

        showCauses = true
        showExceptions = true
        showStackTraces = true
        exceptionFormat = 'full'
    }
}


// ----------------------------------------------------------------
// Tasks
// ----------------------------------------------------------------

// This target requires setting the property "automatedTests" true.
// See settings.gradle for explanation.
task ciTest(dependsOn: ['test'])

