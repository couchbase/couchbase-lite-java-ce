//
// Copyright (c) 2017, 2018, 2019, 2020 Couchbase, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Please try to keep this build file as similar to the other family build files
// as is possible.
//


// ----------------------------------------------------------------
// Plugins
// ----------------------------------------------------------------

plugins {
    id 'com.android.library'
    id 'kotlin-android'
}


// ----------------------------------------------------------------
// Constants
// ----------------------------------------------------------------

ext {
    CBL_GROUP = 'com.couchbase.lite'

    BUILD_RELEASE = file("${ROOT_DIR}/version.txt").text.trim()
    BUILD_NUMBER = (project.hasProperty("buildNumber") && buildNumber) ? buildNumber : "SNAPSHOT"

    // if validating a release, we'll use the released bits
    BUILD_VERSION = "${BUILD_RELEASE}" 
    // normally, though, we will use a local build
    if (BUILD_NUMBER != "RELEASE") { BUILD_VERSION = "${BUILD_VERSION}-${BUILD_NUMBER}" }

    CBL_COMMON_ROOT_DIR = "${ROOT_DIR}/common"
    CBL_COMMON_DIR = "${CBL_COMMON_ROOT_DIR}/common"
    CBL_COMMON_ANDROID_DIR = "${CBL_COMMON_ROOT_DIR}/android"
    CBL_COMMON_ANDROID_KTX_DIR = "${CBL_COMMON_ROOT_DIR}/android-ktx"
    CBL_CE_ROOT_DIR = "${ROOT_DIR}/ce"
    CBL_CE_COMMON_DIR = "${CBL_CE_ROOT_DIR}/common"
    CBL_CE_ANDROID_DIR = "${CBL_CE_ROOT_DIR}/android"

    CBL_ANDROID_LIB = 'couchbase-lite-android-ktx'
}
 
// This module is for testing on Jenkins.  Require a build number
if (BUILD_NUMBER == "SNAPSHOT") { throw new InvalidUserDataException ("!!! A build number is required") }

// comma separated list of annotations for tests that should not be run.
// e.g., -PtestFilter='com.couchbase.lite.internal.utils.SlowTest,com.couchbase.lite.internal.utils.VerySlowTest'
def TEST_FILTER = (!project.hasProperty("testFilter")) ? null : testFilter.replaceAll("\\s", "")

print "Testing ${BUILD_VERSION}"


// ----------------------------------------------------------------
// Build
// ----------------------------------------------------------------

group = CBL_GROUP
version = BUILD_VERSION

android {
    namespace 'com.couchbase.lite.kotlin.test'

    buildToolsVersion BUILD_TOOLS_VERSION

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    kotlinOptions { jvmTarget = '1.8' }

    // mumbo-jumbo to prevent "More than one file was found" message
    packagingOptions { exclude 'META-INF/library_release.kotlin_module' }

    defaultConfig {
        compileSdk COMPILE_SDK_VERSION
        minSdkVersion ANDROID_MIN_SDK
        targetSdkVersion ANDROID_TARGET_SDK
        versionCode 30100
        versionName BUILD_VERSION

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        if (TEST_FILTER != null) { testInstrumentationRunnerArguments.notAnnotation = TEST_FILTER }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }

        release {
            debuggable false
            minifyEnabled false
        }
    }

    sourceSets {
        main {
            manifest.srcFile "${CBL_COMMON_ANDROID_KTX_DIR}/main/AndroidManifest.xml"
            java.srcDirs = [
                "${CBL_COMMON_DIR}/main/kotlin",
                "${CBL_COMMON_ANDROID_KTX_DIR}/main/kotlin",
                "${CBL_CE_COMMON_DIR}/main/kotlin",
                "${projectDir}/../lib/src/main/kotlin",
            ]
            res.srcDirs = [
                "${CBL_COMMON_ANDROID_KTX_DIR}/main/res",
            ]
        }
        debug {
            manifest.srcFile "${CBL_COMMON_ANDROID_KTX_DIR}/debug/AndroidManifest.xml"
        }
        androidTest {
            manifest.srcFile "${CBL_COMMON_ANDROID_KTX_DIR}/debug/AndroidManifest.xml"
            java.srcDirs = [
                "${CBL_COMMON_DIR}/test/java",
                "${CBL_COMMON_ANDROID_DIR}/androidTest/java",
                "${CBL_COMMON_DIR}/test/kotlin",
                "${CBL_CE_COMMON_DIR}/test/java",
                "${CBL_CE_COMMON_DIR}/test/kotlin",
                "${CBL_CE_ANDROID_DIR}/lib/src/androidTest/java",
                "${CBL_COMMON_ANDROID_KTX_DIR}/androidTest/kotlin",
            ]
            assets.srcDirs = [
                "${CBL_COMMON_DIR}/test/assets",
            ]
            res.srcDirs = [
                "${CBL_COMMON_ANDROID_KTX_DIR}/androidTest/res",
            ]
        }
    }
}

repositories {
    maven {
        if (BUILD_NUMBER == "RELEASE") {
            // Validate a released build
            url "https://mobile.maven.couchbase.com/maven2/dev/"
        }
        else {
            // Test a cimaven candidate
            url "https://proget.sc.couchbase.com/maven2/cimaven"
        }
        content { includeGroupByRegex "com\\.couchbase\\.lite.*" }
    }

    google()
    mavenCentral()
}

dependencies {
    // androidx.work:work-runtime-ktx:2.8.0 requires 1.3.0
    compileOnly 'androidx.annotation:annotation:1.3.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0"

    // Work Manager support
    implementation "androidx.work:work-runtime-ktx:2.8.1"

    // Testing the Android CE KTX package
    implementation "com.couchbase.lite:${CBL_ANDROID_LIB}:${BUILD_VERSION}"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Work Manager Test support
    androidTestImplementation "androidx.work:work-testing:2.8.1"
}


// ----------------------------------------------------------------
// Tasks
// ----------------------------------------------------------------

// This target requires setting the property "automatedTests" true.
// See settings.gradle for explanation.
task ciTest(dependsOn: ['connectedDebugAndroidTest'])

